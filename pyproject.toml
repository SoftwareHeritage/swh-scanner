[project]
name = "swh.scanner"
authors = [
    {name="Software Heritage developers", email="swh-devel@inria.fr"},
]

description = "Software Heritage code scanner"
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
]
dynamic = ["version", "dependencies", "optional-dependencies"]

[tool.setuptools.packages.find]
include = ["swh.*"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt", "requirements-swh.txt"]}

[tool.setuptools.dynamic.optional-dependencies]
testing = {file = ["requirements-test.txt"]}

[project.entry-points."swh.cli.subcommands"]
"swh.scanner" = "swh.scanner.cli"

[project.urls]
"Homepage" = "https://gitlab.softwareheritage.org/swh/devel/swh-scanner"
"Bug Reports" = "https://gitlab.softwareheritage.org/swh/devel/swh-scanner/-/issues"
"Funding" = "https://www.softwareheritage.org/donate"
"Documentation" = "https://docs.softwareheritage.org/devel/swh-scanner/"
"Source" = "https://gitlab.softwareheritage.org/swh/devel/swh-scanner.git"

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
fallback_version = "0.0.1"

[tool.black]
target-version = ['py39', 'py310', 'py311', 'py312']

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
force_sort_within_sections = true
known_first_party = ['swh']

[tool.mypy]
namespace_packages = true
warn_unused_ignores = true
explicit_package_bases = true
# ^ Needed for mypy to detect py.typed from swh packages installed
# in editable mode

plugins = []

# 3rd party libraries without stubs (yet)
[[tool.mypy.overrides]]
module = [
    "ndjson.*",
    "pytest_flask.*",
]
ignore_missing_imports = true

[tool.flake8]
select = ["C", "E", "F", "W", "B950"]
ignore = [
    "E203", # whitespaces before ':' <https://github.com/psf/black/issues/315>
    "E231", # missing whitespace after ','
    "E501", # line too long, use B950 warning from flake8-bugbear instead
    "W503" # line break before binary operator <https://github.com/psf/black/issues/52>
]
max-line-length = 88
exclude = ["build/", ".tox/"]

[tool.pytest.ini_options]
norecursedirs = "build docs .*"
consider_namespace_packages = true
addopts = "--live-server-port 6600 -p no:django --no-live-server-clean-stop"
testpaths = [
    "swh/scanner/tests",
]
markers = [
    "setup_test: allow the setup wizard to run"
]
